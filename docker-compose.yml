services:
  app:
    build:
      args:
        user: ${USER}
        uid: ${UID}
      context: ./
      dockerfile: Dockerfile
    image: myapp
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - myapp

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d
    depends_on:
      - db
      - app
    networks:
      - myapp

  db:
    image: mysql:5.5.51
    restart: unless-stopped
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - SERVICE_TAGS=prod
      - SERVICE_NAME=mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    networks:
      - myapp

networks:
  myapp:
    driver: bridge

volumes:
  dbdata:
